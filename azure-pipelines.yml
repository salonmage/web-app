trigger:
- master
- develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  projectName: webapp
  productionDomain: $(PRODUCTION_DOMAIN)
  stagingDomain: $(STAGING_DOMAIN)
  registryServerName: $(REGISTRY_SERVER_NAME)
  imageName: $(projectName)

steps:
# - bash: docker build -f $(system.defaultWorkingDirectory)/Dockerfile -t $(REGISTRY_SERVER_NAME)/$(imageName):$(build.buildId) -t $(REGISTRY_SERVER_NAME)/$(imageName):latest $(system.defaultWorkingDirectory)
#   displayName: 'docker build'

# - bash: docker login $(REGISTRY_SERVER_NAME) -u $(REGISTRY_LOGIN) -p $(REGISTRY_PASSWORD)
#   displayName: 'docker login'

# - bash: |
#     docker push $(REGISTRY_SERVER_NAME)/$(imageName):$(build.buildId)
#     docker push $(REGISTRY_SERVER_NAME)/$(imageName):latest
#   displayName: 'docker push'

# - task: HelmInstaller@0
#   displayName: 'Install Helm'
#   inputs:
#     helmVersionToInstall: 2.14.1

- task: HelmDeploy@0
  displayName: 'Helm init'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: 'SalonMage - k8s'
    command: init
    # upgradetiller: true
    waitForExecution: true
    arguments: --client-only

# - task: HelmDeploy@0
#   displayName: 'Helm package'
#   inputs:
#     command: package
#     chartPath: $(system.defaultWorkingDirectory)/charts/$(projectName)
#     destination: $(Build.ArtifactStagingDirectory)
#     arguments: --version $(build.buildId)

# - task: HelmDeploy@0
#   inputs:
#     connectionType: 'Kubernetes Service Connection'
#     kubernetesServiceConnection: 'SalonMage - k8s'
#     namespace: 'salonmage'
#     command: upgrade
#     chartType: filepath
#     chartPath: $(Build.ArtifactStagingDirectory)/$(projectName)-$(build.buildId).tgz
#     releaseName: $(projectName)
#     install: true
#     overrideValues: image.repository=$(REGISTRY_SERVER_NAME)/$(imageName),image.tag=$(build.buildId),service.domain=$(PRODUCTION_DOMAIN)

- task: HelmDeploy@0
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: 'SalonMage - k8s'
    command: 'ls'